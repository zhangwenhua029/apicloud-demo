<!doctype html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0" />
    <title>slidPane</title>
    <link rel="stylesheet" type="text/css" href="../css/sm.min.css" />
    <link rel="stylesheet" type="text/css" href="../css/icons.min.css" />
    <style>
    body{background: #F9F9F9;display: -webkit-box;display: -webkit-flex;display: flex;height: 100%;-webkit-box-orient: vertical;-webkit-flex-flow: column;flex-flow: column;}
    #header{background: #F9F9F9;}
    .bar:after{background-color: inherit;}
    /*.bar-nav~.content{top: 0.5rem;}*/.store .ion-ios-heart-outline:before{content: "\f443";}
    hr{border-top: 1px solid #DCDCDC;margin-top: 10px;border-radius: 4px;box-shadow: 1px 1px white;}
    .content-block{margin: 1rem 0;}
    .content-block h3{text-align: center;color: black;}
    #articleAuthor{padding: 10px;text-align: center;font-size: 14px;padding-bottom: 0px;}
    #articleContent, #articleContent p{color: #232323;line-height: 28px;}
    #articleContent p{text-indent: 2em;}
    #articleContent .loading{text-align: center;display: block;}
    .theme-dark .bar:after{background-color: inherit;}
    .theme-dark #header{background: #222426;}
    .theme-dark #articleTitle{color: #ABABAB;}
    .theme-dark hr{border-top: 1px solid #717171;box-shadow: 1px 1px black;}
    .theme-dark #articleContent, .theme-dark #articleContent p{color: gray;}
    .article-more{text-align: right;font-size: 24px;color: gray;display: none;}
    </style>
</head>

<body>
    <!-- 标题栏 -->
    <header class="bar bar-nav" id="header">
        <button class="button button-link button-nav pull-left"> 
            <span class="step size-21 pull-left open-panel" id="btnOpenSlid"> &nbsp;&nbsp;
                <i class="icon ion-navicon-round"></i> 
            </span> 
        </button>
        <button class="button button-link button-nav pull-right"> 
            <span class="step size-21" id="btnStore"> 
                <i class="icon ion-ios-heart-outline"></i> &nbsp;&nbsp;
            </span> 
        </button>
    </header>
    <!-- 这里是页面内容区 -->
    <div class="content">
        <div class="content-block">
            <h3 id="articleTitle"></h3>
            <hr />
            <div id="articleAuthor"></div>
            <div id="articleContent"><span class="loading">正在加载中....</span></div>
            <div class="row article-more" id="articleMore"> <i class="icon ion-share"></i> </div>
            <input type="hidden" id="articleDay" /> 
        </div>
    </div>
    <script type='text/javascript' src='../script/zepto.min.js' charset='utf-8'></script>
    <script type='text/javascript' src='../script/sm.min.js' charset='utf-8'></script>
    <script type='text/javascript' src='../script/ymma.js' charset='utf-8'></script>
    <script>
    var query = undefined;
    var model = undefined;
    var dbsql = undefined;
    var offsetNum = 0;

    function addEvent() {
        // 单击左侧【今日文章】时，触发的事件
        api.addEventListener({name: 'event_todayArticle'}, function(ret, err) {
            api.closeSlidPane();
            getArticle(ymma.getDateStr(0), function(res) {
                if (!res) return;
                $('.content').scrollTop(0);
                loadArticle(res);
                offsetNum = 0;
            });
        });
        // 左滑触发的事件
        api.addEventListener({name: 'swipeleft'}, function() {
            if (offsetNum + 1 > 0) {
                $.toast("没有了", 1000);
                return;
            }
            $.toast("后一天", 1000);
            getArticle(ymma.getDateStr(offsetNum + 1), function(res) {
                if (!res) return;
                $('.content').scrollTop(0);
                loadArticle(res);
                offsetNum += 1;
            });
        });
        // 右滑触发的事件
        api.addEventListener({name: 'swiperight'}, function() {
            $.toast("前一天", 1000);
            getArticle(ymma.getDateStr(offsetNum - 1), function(res) {
                if (!res) return;
                $('.content').scrollTop(0);
                loadArticle(res);
                offsetNum -= 1;
            });
        });


        $('#btnOpenSlid').click(function() {
            api.openSlidPane({type: 'left'});
        });

        $('#articleMore').click(function () {
            // var buttons1 = [
            //     {text: '请选择', label: true },
            //     {text: '卖出', bold: true, color: 'danger', onClick: function() {
            //         $.alert("你选择了“卖出“");
            //       }
            //     }, 
            //     {text: '买入', onClick: function() {
            //         $.alert("你选择了“买入“");
            //       }
            //     }
            // ];
            // var buttons2 = [{text: '取消', bg: 'danger'} ];
            // var groups = [buttons1, buttons2];
            // $.actions(groups);
            var obj = api.require('MNActionButton');
            obj.open({
                layout: {
                    row: 2,                        //（可选项）数字类型；每屏显示菜单按钮的行数；默认：2
                    col: 3,                        //（可选项）数字类型；每屏显示菜单按钮的列数；默认：3
                    rowSpacing: 5,                 //（可选项）数字类型；行与行之间的距离；默认：10
                    colSpacing: 10,                //（可选项）数字类型；列与列之间的距离；默认：10
                    offset: 0                      //（可选项）数字类型；整个菜单底部距离所属 window 底部的距离，只能为正整数；默认：0
                },
                animation: true,                   //（可选项）布尔类型；弹出和隐藏菜单时是否带弹出动画效果，true|false；默认：true
                autoHide: true,                    //（可选项）布尔类型；点击菜单按钮后是否自动隐藏菜单，true|false；默认：true
                styles: {
                    maskBg: 'rgba(0,0,0,0.2)',     //（可选项）字符串类型；遮罩层背景，支持 rgb，rgba，#，img；默认：rgba(0,0,0,0.2)
                    bg: '#fff',                    //（可选项）字符串类型；菜单有效区域背景，支持 rgb，rgba，#，img；默认：#fff
                    cancelButton: {                      //（可选项）JSON 对象类型，取消按钮设置
                        size: 44,                  //（可选项）数字类型；底部取消按钮的高和宽；默认：44
                        bg: '#fff',                //（可选项）字符串类型；取消按钮的 100% 宽度的背景，支持rgb，rgba，#，img；默认：'#fff'
                        icon: 'widget://res/action-button-cancel.png'  //（可选项）字符串类型：取消按钮的图标，要求本地路径（widget://、fs://）；默认：默认X型图标
                    },
                    item: { //（可选项）JSON 对象类型，菜单按钮设置
                        titleColor: '#888',        //（可选项）字符串类型；菜单按钮文字颜色，支持 rgb，rgba，#；默认：#848484
                        titleHighlight: 'dd2727',  //（可选项）字符串类型；菜单按钮文字高亮颜色，支持 rgb，rgba，#；默认：同 titleColor
                        titleSize: 12              //（可选项）数字类型；菜单按钮文字大小，同时也是文字栏所占高度，值为 0 时不显示文字栏；默认：12
                    },
                    indicator: {                   //（可选项）JSON 对象类型；页标指示器样式，若不传则不显示该指示器
                        color: '#c4c4c4',          //（可选项）字符串类型；其它页指示器颜色；支持rgb、rgba、#；默认：'#c4c4c4'
                        highlight: '#9e9e9e'       //（可选项）字符串类型；当前页指示器颜色；支持rgb、rgba、#；默认：'#9e9e9e'
                    }
                },
                items:[{ //JSON 对象类型；一个菜单项的设置信息
                    icon: 'widget://res/icon1.png', //字符串类型；一个菜单按钮的图标路径，要求本地路径（widget://、fs://）；
                highlight: 'widget://res/highlight1.png', //（可选项）字符串类型；一个菜单按钮的高亮图标路径，要求本地路径（widget://、fs://）；默认：同 icon
                    title: '菜单项1',               //字符串类型；菜单按钮的文字；默认：未设置时不显示，但文字栏仍按 titleSize 设置显示高度
                }, {
                    icon: 'widget://res/icon2.png',
                    highlight: 'widget://res/highlight2.png',
                    title: '菜单项2'
                }, {
                    icon: 'widget://res/icon3.png',
                    highlight: 'widget://res/highlight3.png',
                    title: '菜单项3'
                }, {
                    icon: 'widget://res/icon4.png',
                    highlight: 'widget://res/highlight4.png',
                    title: '菜单项4'
                }, {
                    icon: 'widget://res/icon5.png',
                    highlight: 'widget://res/highlight5.png',
                    title: '菜单项5'
                }, {
                    icon: 'widget://res/icon6.png',
                    highlight: 'widget://res/highlight6.png',
                    title: '菜单项6'
                }, {
                    icon: 'widget://res/icon7.png',
                    highlight: 'widget://res/highlight7.png',
                    title: '菜单项7'
                }, {
                    icon: 'widget://res/icon8.png',
                    highlight: 'widget://res/highlight8.png',
                    title: '菜单项8'
                }]
            }, function(ret, err) {
                if (ret) {
                    alert(JSON.stringify(ret));
                } else {
                    alert(JSON.stringify(err));
                }
            });
        });

        $('#btnStore').click(function() {
            var _this = $(this);
            if (_this.hasClass('store')) {
                _this.removeClass('store');
                dbsql.delete('store', ("day='" + $('#articleDay').val() + "'"), function(res) {
                    if (res.err) alert(JSON.stringify(res.err));
                    else $.toast("取消成功", 1000);
                });
            } else {
                _this.addClass('store');
                var sql = "insert into store(title ,day)values('" + $('#articleTitle').text() + "','" + $('#articleDay').val() + "')";
                dbsql.executeSql({name: 'userStore', sql: sql }, function(ret, err) {
                    if (ret.status) {$.toast("收藏成功", 1000); } else {
                        api.alert({msg: err.msg });
                    }
                });
            }
        })
    }

    function loadArticle(data) {
        $('#articleTitle').html(data.title);
        $('#articleContent').html(data.content);
        $('#articleAuthor').html(data.author || '');
        dbsql.count({table: 'store', where: "day='" + $('#articleDay').val() + "'"}, function(size) {
            if (size == '1') $('#btnStore').addClass('store');
            else $('#btnStore').removeClass('store');
        });
    }

    function getArticle(date, callback) {
        callback = callback || function(e) {};
        query.createQuery(function(ret, err) {
            var qid = ret.qid;
            query.limit({qid: qid, value: 1 });
            query.whereEqual({qid: qid, column: 'day', value: date });
            setTimeout(function() {
                model.findAll({class: 'article', qid: qid }, function(ret, err) {
                    if (!ret || ret.length <= 0) {
                        $.toast("没有了", 1000);
                        return;
                    } else {
                        $('#articleDay').val(date);
                        $('#articleContent').html('<span class="loading">正在加载中....</span>');
                        callback(ret[0]);
                    }
                });
            }, 50);
        });
    }
    apiready = function() {
        query = api.require('query');
        model = api.require('model');
        dbsql = initSqlite(api);
        model.config({
            appId: 'A6900701267871',
            appKey: 'D6B56E5A-AE13-190F-DE55-9557B8179F47'
        });
        var offsetHeight = getOffsetHeight(api);
        $('#header').css('paddingTop', offsetHeight);
        addEvent();
        // 清空偏好设置
        api.removePrefs({key: 'db'});
        api.removePrefs({key: 'moon'});
        dbsql.init(function() {
            getArticle(ymma.getDateStr(0), function(res) {
                if (!res) return;
                loadArticle(res);
                $('#articleMore').show();
            });
        });
        ymma.addMoonEvent(api);
    };
    </script>
</body>

</html>
